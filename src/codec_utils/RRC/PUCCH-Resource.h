/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "PUCCH-Resource"
 * 	found in "pucch-resource.asn1"
 * 	`asn1c -fnative-types -no-gen-example`
 */

#ifndef	_PUCCH_Resource_H_
#define	_PUCCH_Resource_H_


#include <asn_application.h>

/* Including external dependencies */
#include "PUCCH-ResourceId.h"
#include "PRB-Id.h"
#include <NativeEnumerated.h>
#include "PUCCH-format0.h"
#include "PUCCH-format1.h"
#include "PUCCH-format2.h"
#include "PUCCH-format3.h"
#include "PUCCH-format4.h"
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum intraSlotFrequencyHopping {
	intraSlotFrequencyHopping_enabled	= 0
} e_intraSlotFrequencyHopping;
typedef enum format_PR {
	format_PR_NOTHING,	/* No components present */
	format_PR_format0,
	format_PR_format1,
	format_PR_format2,
	format_PR_format3,
	format_PR_format4
} format_PR;

/* PUCCH-Resource */
typedef struct PUCCH_Resource {
	PUCCH_ResourceId_t	 pucch_ResourceId;
	PRB_Id_t	 startingPRB;
	long	*intraSlotFrequencyHopping;	/* OPTIONAL */
	PRB_Id_t	*secondHopPRB;	/* OPTIONAL */
	struct format {
		format_PR present;
		union PUCCH_Resource__format_u {
			PUCCH_format0_t	 format0;
			PUCCH_format1_t	 format1;
			PUCCH_format2_t	 format2;
			PUCCH_format3_t	 format3;
			PUCCH_format4_t	 format4;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} format;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PUCCH_Resource_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_intraSlotFrequencyHopping_4;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_PUCCH_Resource;

#ifdef __cplusplus
}
#endif

#endif	/* _PUCCH_Resource_H_ */
#include <asn_internal.h>
